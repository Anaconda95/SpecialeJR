hack.exe
run hack.exe
install.packages("ccgarch")
library(readxl)
cryptopriser_m_weekend <- read_excel("OneDrive/CryptoBachelor/cryptopriser m weekend.xlsx")
View(cryptopriser_m_weekend)
View(cryptopriser_m_weekend)
x <- btc
mydata <- cryptopriser_m_weekend
summary(mydata)
hack(bitpanda.com, extract(ALL RIPPLE COINS))
install.packages("rmgarch")
dccfit(fg)
library("rmgarch", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
fit.2.11mn = dccfit(dcc.11mn, data = B [1:192, 1:3])
uspec.n = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
library("MTS")
uspec.n = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
library("vars")
library(parallel)
library(rugarch)
library(rmgarch)
library("tseries")
library("zoo")
library("forecast")
library("FinTS")
library("vars")
library("MTS")
uspec.n = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc.11mn = dccspec(uspec.n, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit.2.11mn = dccfit(dcc.11mn, data = B [1:192, 1:3])
library(readxl)
cryptopriser_m_weekend_edit <- read_excel("OneDrive/CryptoBachelor/cryptopriser m weekend edit.xlsx")
View(cryptopriser_m_weekend_edit)
mydata <- cryptopriser_m_weekend_edit
library(parallel)
library(rugarch)
library(rmgarch)
library("tseries")
library("zoo")
library("forecast")
library("FinTS")
library("vars")
library("MTS")
uspec.n = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc.11mn = dccspec(uspec.n, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit.2.11mn = dccfit(dcc.11mn, data = mydata [1:1747, 18:19])
install.packages("tseries")
install.packages("zoo")
install.packages("zoo")
install.packages("forecast")
install.packages("FinTS")
install.packages("vars")
install.packages("MTS")
mydata <- cryptopriser_m_weekend_edit
summary(mydata)
library(parallel)
library(rugarch)
library(rmgarch)
library("tseries")
library("zoo")
library("forecast")
library("FinTS")
library("vars")
library("MTS")
uspec.n = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc.11mn = dccspec(uspec.n, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit.2.11mn = dccfit(dcc.11mn, data = mydata [1:1747, 18:19])
#devtools::document("P:/CST/Kalman/CESKalman")   ## Opdaterer dokumentationen (ikke n?dvendig at k?re)
#devtools::build_manual("P:/CST/Kalman/CESKalman") ## Opdaterer manual (ikke n?dvendig at k?re)
library(CESKalman)
devtools::install("Macintosh HD⁩ ▸ ⁨Brugere⁩ ▸ ⁨rasmuskaslund⁩ ▸ ⁨Dokumenter⁩ ▸ ⁨GitHub⁩ ▸ ⁨SpecialeJR ⁩ ▸ ⁨CES-kalman⁩") ## Installerer pakken
devtools::install("Macintosh HD/Brugere/rasmuskaslund/Dokumenter/GitHub/SpecialeJR/CES-kalman/CESKalman⁩") ## Installerer pakken⁩
#devtools::document("P:/CST/Kalman/CESKalman")   ## Opdaterer dokumentationen (ikke n?dvendig at k?re)
#devtools::build_manual("P:/CST/Kalman/CESKalman") ## Opdaterer manual (ikke n?dvendig at k?re)
library(CESKalman)
set.seed(1234)
sigma = 0.6 ## Typisk hvad man finder i literaturen
# Standardafvigelser
SigmaGammaK  = 0.05
rm(list=ls())
# =================================================================================
# --------------- INSTALLING PACKAGE ----------------------------------------------
# =================================================================================
library(devtools)
# =================================================================================
# --------------- INSTALLING PACKAGE ----------------------------------------------
# =================================================================================
library(devtools)
install.packages("devtools")
source('~/Documents/GitHub/SpecialeJR /CES-kalman/CESKalman_Example.R', echo=TRUE)
source('~/Documents/GitHub/SpecialeJR /CES-kalman/CESKalman_Example.R', echo=TRUE)
install.packages("CESKalman")
install.packages("remotes")
remotes::install_github("CKastrup/CESKalman")
install.packages("remotes")
remotes::install_github("CKastrup/CESKalman")
install.packages("remotes")
remotes::install_github("CKastrup/CESKalman")
source('~/Documents/GitHub/SpecialeJR /CES-kalman/CESKalman_Example.R', echo=TRUE)
install.packages("devtools")
installed.packages("devtools")
install.packages("devtools")
library(matlib)
remove.packages("rgl")
install.packages("matlib")
library(matlib)
#Step1: Load Data set
df<-read.csv("simpeldata4grup.csv",sep=';')
attach(df)
names(df)
dim(df)
View(df)
setwd("~/Documents/GitHub/SpecialeJR /ML Rasmus")
solve()
#Step1: Load Data set
df<-read.csv("simpeldata4grup.csv",sep=';')
attach(df)
names(df)
dim(df)
View(df)
#make prices and shares
df     <- transform( df,
p1 = FØDEVARER.OG.IKKE.ALKOHOLISKE.DRIKKEVARER/Faste.FØDEVARER,
p2 = ALKOHOLISKE.DRIKKEVARER.OG.TOBAK/Faste.ALKOHOL,
p3 = BEKLÆDNING.OG.FODTØJ/Faste.BEKLÆDNING,
p4 = BOLIGBENYTTELSE..ELEKTRICITET.OG.OPVARMNING/Faste.BOLIG.EL.OG.OPVARMNING
)
df     <- transform( df,
w1 = FØDEVARER.OG.IKKE.ALKOHOLISKE.DRIKKEVARER/Sumloeb,
w2 = ALKOHOLISKE.DRIKKEVARER.OG.TOBAK/Sumloeb,
w3 = BEKLÆDNING.OG.FODTØJ/Sumloeb,
w4 = BOLIGBENYTTELSE..ELEKTRICITET.OG.OPVARMNING/Sumloeb
)
df     <- transform( df,
phat1=p1/Sumloeb,
phat2=p2/Sumloeb,
phat3=p3/Sumloeb,
phat4=p4/Sumloeb
)
View(df)
#no scientific numbers
options(scipen=999)
#make the relevant data
w = matrix(c(df$w1,df$w2,df$w3,df$w4),
nrow=26, ncol=4)
phat = matrix(c(df$phat1,df$phat2,df$phat3,df$phat4),
nrow=26, ncol=4)
a = c(0.23,0.05,0.07,0.65)
b= c(30000,5000,8000,80000)
supernum <- 1-rowSums(phat %*% diag(b))
supernummat <- matrix(rep(supernum,4),ncol=4)
u <- w - phat %*% diag(b) - supernummat%*%diag(a)
cov(u)
det(cov(u))
solve(cov(u))
rowSums(cov(u))
u
uhat <- u[1:3,1:3]
uhat <- u[ ,1:3]
uhat
det(cov(uhat))
solve(cov(uhat))
length(w)
dim(w)
dims = dim(w)
dims=dim(w)
T=dims[1]
n=dims[2]
T
D
n
lol=2
det(A)
A <- solve(cov(uhat))
det(A
)
log(det(A))
A
apply(u,1,function(x,A) u %*% A %*% t(u))
apply(u,1,function(x,A) x %*% A %*% t(x))
apply(u,1,function(x) x %*% A %*% t(x))
u(1,)%*%A
u
u[1,]%*%A
A
u[1,]
apply(uhat,1,function(x) x %*% A %*% t(x))
uhat[1,]%*%A
uhat[1,]%*%A%*%t(uhat[1,])
uhat[1,] %*% A %*% t(uhat[1,])
t(uhat[1,])
t(t(uhat[1,]))
uhat[1,] %*% A %*% t(t(uhat[1,]))
apply(uhat,1,function(x) x %*% A %*% t(t(x)))
uhatAuhat <- apply(uhat,1,function(x) x %*% A %*% t(t(x)))
(n-1)/2*T*log(2*pi) + T/2*log(det(A)) - 1/2 sum(uhatAuhat)
(n-1)/2*T*log(2*pi) + T/2*log(det(A)) - 1/2*sum(uhatAuhat)
loglik <- function(w, phat, theta) {
a <- c(theta[1],theta[2],theta[3],1-theta[1]-theta[2]-theta[3])
b <- c(theta[4],theta[5],theta[6],theta[7])
supernum <- 1-rowSums(phat %*% diag(b))
supernummat <- matrix(rep(supernum,4),ncol=4)
u <- w - phat %*% diag(b) - supernummat%*%diag(a)
#smid en variabel ud
uhat <- u[ ,1:3]
#find invers af cov(uhat)
A <- solve(cov(uhat))
uhatAuhat <- apply(uhat,1,function(x) x %*% A %*% t(t(x)))
return(   (n-1)/2*T*log(2*pi) + T/2*log(det(A)) - 1/2*sum(uhatAuhat)     )
}
result <- optim(theta = c(0.23,0.05,0.07, 30000,5000,8000,80000), fn = loglik,
phat=phat, w=w)
result <- optim(par = c(0.23,0.05,0.07, 30000,5000,8000,80000), fn = loglik,
phat=phat, w=w)
View(result)
result
result[["counts"]][["function"]]
loglik <- function(w, phat, par) {
a <- c(par[1],par[2],par[3],1-par[1]-par[2]-par[3])
b <- c(par[4],par[5],par[6],par[7])
supernum <- 1-rowSums(phat %*% diag(b))
supernummat <- matrix(rep(supernum,4),ncol=4)
u <- w - phat %*% diag(b) - supernummat%*%diag(a)
#smid en variabel ud
uhat <- u[ ,1:3]
#find invers af cov(uhat)
A <- solve(cov(uhat))
uhatAuhat <- apply(uhat,1,function(x) x %*% A %*% t(t(x)))
return(   -(n-1)/2*T*log(2*pi) + T/2*log(det(A)) - 1/2*sum(uhatAuhat)     )
}
result <- optim(par = c(0.23,0.05,0.07, 30000,5000,8000,80000), fn = loglik,
phat=phat, w=w)
loglik <- function(w, phat, par) {
a <- c(par[1],par[2],par[3],1-par[1]-par[2]-par[3])
b <- c(par[4],par[5],par[6],par[7])
supernum <- 1-rowSums(phat %*% diag(b))
supernummat <- matrix(rep(supernum,4),ncol=4)
u <- w - phat %*% diag(b) - supernummat%*%diag(a)
#smid en variabel ud
uhat <- u[ ,1:3]
#find invers af cov(uhat)
A <- solve(cov(uhat))
uhatAuhat <- apply(uhat,1,function(x) x %*% A %*% t(t(x)))
return(   -(n-1)/2*T*log(2*pi) + T/2*log(det(A)) - 1/2*sum(uhatAuhat)     )
}
optim(par = c(0.23,0.05,0.07, 30000,5000,8000,80000), fn = loglik,
phat=phat, w=w)
loglik <- function(w, phat, par) {
a <- c(par[1],par[2],par[3],1-par[1]-par[2]-par[3])
b <- c(par[4],par[5],par[6],par[7])
supernum <- 1-rowSums(phat %*% diag(b))
supernummat <- matrix(rep(supernum,4),ncol=4)
u <- w - phat %*% diag(b) - supernummat%*%diag(a)
#smid en variabel ud
uhat <- u[ ,1:3]
#find invers af cov(uhat)
A <- solve(cov(uhat))
uhatAuhat <- apply(uhat,1,function(x) x %*% A %*% t(t(x)))
return(   -(n-1)/2*T*log(2*pi) - T/2*log(det(A)) + 1/2*sum(uhatAuhat)     )
}
optim(par = c(0.23,0.05,0.07, 30000,5000,8000,80000), fn = loglik,
phat=phat, w=w)
optim(par = c(0.2,0.05,0.1, 30000,5000,8000,80000), fn = loglik,
phat=phat, w=w)
optim(par = c(0.25,0.25,0.25, 30000,5000,8000,80000), fn = loglik,
phat=phat, w=w)
optim(par = c(0.23,0.05,0.07, 20000,3500,5500,50000), fn = loglik,
phat=phat, w=w)
help("optim")
optim(par = c(0.23,0.05,0.07, 20000,3500,5500,50000), fn = loglik,
phat=phat, w=w,maxit=1000)
optim(par = c(0.23,0.05,0.07, 20000,3500,5500,50000), fn = loglik,
phat=phat, w=w, control = list(maxit = 10000)
optim(par = c(0.23,0.05,0.07, 20000,3500,5500,50000), fn = loglik,
phat=phat, w=w, control = list(maxit = 10000))
optim(par = c(0.23,0.05,0.07, 20000,3500,5500,50000), fn = loglik,
phat=phat, w=w)
optim(par = c(0.23,0.05,0.07, 20000,3500,5500,50000), fn = loglik,
phat=phat, w=w, control=list(maxit=1000))
optim(par = c(0.23,0.05,0.07, 20000,3500,5500,50000), fn = loglik,
phat=phat, w=w, control=list(maxit=5000))
optim(par = c(0.23,0.1,0.1, 20000,7500,5500,80000), fn = loglik,
phat=phat, w=w, control=list(maxit=5000))
