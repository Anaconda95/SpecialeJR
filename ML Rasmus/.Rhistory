#upper=c(100,100,100,100,100,100,100,1,1,1,1),
control=list(maxit=5000))
print(sol)
sol_gamma <- c(sol$par[1:3],0)
sol_bstar <- sol$par[4:7]
sol_beta <-  sol$par[8:11]
sol_alpha <- exp(sol_gamma)/sum(exp(sol_gamma))
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
b <- matrix(rep(bstar,(T-1)),nrow=(T-1),ncol=n, byrow=TRUE) + x[1:(T-1),]%*%diag(beta)
View(b)
View(x)
par=c(-1,-2,-2,1,0.1,0.2,1,0.6,0.6,0.6,0.6)
gamma <- c(par[1:(n-1)],0)
a <- exp(gamma)/sum(exp(gamma))
bstar <- c(par[n:(2*n-1)])
beta <- c(par[(2*n):(3*n-1)])
b <- matrix(rep(bstar,(T-1)),nrow=(T-1),ncol=n, byrow=TRUE) + x[1:(T-1),]%*%diag(beta)
sol <-  optim(par = c(-1,-2,-2,1,0.1,0.2,1,0.6,0.6,0.6,0.6), fn = loglik,
phat=phat, w=w, x=x, habitform=1, method="BFGS",
#lower = c(-100,-100,-100,0,0,0,0,0,0,0,0),
#upper=c(100,100,100,100,100,100,100,1,1,1,1),
control=list(maxit=5000))
print(sol)
sol_gamma <- c(sol$par[1:3],0)
sol_bstar <- sol$par[4:7]
sol_beta <-  sol$par[8:11]
sol_alpha <- exp(sol_gamma)/sum(exp(sol_gamma))
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
gamma <- c(par[1:(n-1)],0)
a <- exp(gamma)/sum(exp(gamma))
bstar <- c(par[n:(2*n-1)])
beta <- c(par[(2*n):(3*n-1)])
b <- matrix(rep(bstar,(T-1)),nrow=(T-1),ncol=n, byrow=TRUE) + x[1:(T-1),]%*%diag(beta)
View(b)
source('~/Documents/GitHub/SpecialeJR /ML Rasmus/LES_logitA_habitformation.R')
sol <-  optim(par = c(-1,-2,-2,   1, 0.1, 0.2, 1,   0.6,0.6,0.6,0.6), fn = loglik,
phat=phat, w=w, x=x, habitform=0, method="BFGS",
#lower = c(-100,-100,-100,0,0,0,0,0,0,0,0),
#upper=c(100,100,100,100,100,100,100,1,1,1,1),
control=list(maxit=5000))
print(sol)
sol <-  optim(par = c(-1,-2,-2,   1, 0.1, 0.2, 1,   0.6,0.6,0.6,0.6), fn = loglik,
phat=phat, w=w, x=x, habitform=1, method="BFGS",
#lower = c(-100,-100,-100,0,0,0,0,0,0,0,0),
#upper=c(100,100,100,100,100,100,100,1,1,1,1),
control=list(maxit=5000))
print(sol)
b <- matrix(rep(bstar,(T-1)),nrow=(T-1),ncol=n, byrow=TRUE) + x[1:(T-1),]%*%diag(beta)
b
supernum <- 1-rowSums(phat[2:T] * b)
supernum
supernummat <- matrix(rep(supernum,n),ncol=n)
u <- w[2:T] - phat[2:T]*b - supernummat%*%diag(a)
u
w[2:T]
w[2:T,]
gamma <- c(par[1:(n-1)],0)
a <- exp(gamma)/sum(exp(gamma))
bstar <- c(par[n:(2*n-1)])
beta <- c(par[(2*n):(3*n-1)])
b <- matrix(rep(bstar,(T-1)),nrow=(T-1),ncol=n, byrow=TRUE) + x[1:(T-1),]%*%diag(beta)
supernum <- 1-rowSums(phat[2:T,] * b)
supernummat <- matrix(rep(supernum,n),ncol=n)
u <- w[2:T,] - phat[2:T,]*b - supernummat%*%diag(a)
u
sum(u)
sum(u[1])
sum(u[1,])
sol <-  optim(par = c(-1,-2,-2,   1, 0.1, 0.2, 1,   0.6,0.6,0.6,0.6), fn = loglik,
phat=phat, w=w, x=x, habitform=1, method="BFGS",
#lower = c(-100,-100,-100,0,0,0,0,0,0,0,0),
#upper=c(100,100,100,100,100,100,100,1,1,1,1),
control=list(maxit=5000))
print(sol)
sol_gamma <- c(sol$par[1:3],0)
sol_bstar <- sol$par[4:7]
sol_beta <-  sol$par[8:11]
sol_alpha <- exp(sol_gamma)/sum(exp(sol_gamma))
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
loglik <- function(par,w,phat,x,habitform) {
dims=dim(w)
T=dims[1]
n=dims[2]
if (habitform==1){
gamma <- c(par[1:(n-1)],0)
a <- exp(gamma)/sum(exp(gamma))
bstar <- c(par[n:(2*n-1)])
beta <- c(par[(2*n):(3*n-1)])
b <- matrix(rep(bstar,(T-1)),nrow=(T-1),ncol=n, byrow=TRUE) + x[1:(T-1),]%*%diag(beta)
supernum <- 1-rowSums(phat[2:T,] * b)
supernummat <- matrix(rep(supernum,n),ncol=n)
u <- w[2:T,] - phat[2:T,]*b - supernummat%*%diag(a)
#smid en variabel ud
uhat <- u[ , 1:(n-1)]
#find invers af cov(uhat) - jf. Peters note
A <- solve(cov(uhat))
#udregn u_t'Au_t for at kunne tage summen
uhatAuhat <- apply(uhat,1,function(x) x %*% A %*% t(t(x)))
#likelihood fnctn
return(   +(n-1)/2*T*log(2*pi) - T/2*log(det(A)) + 1/2*sum(uhatAuhat)     )
}else if (habitform == 0) {
gamma <- c(par[1:(n-1)],0)
a <- exp(gamma)/sum(exp(gamma))
b <- c(par[n:(2*n-1)])
supernum <- 1-rowSums(phat %*% diag(b))
supernummat <- matrix(rep(supernum,n),ncol=n)
u <- w - phat %*% diag(b) - supernummat%*%diag(a)
#smid en variabel ud
uhat <- u[ ,1:(n-1)]
#find invers af cov(uhat) - jf. Peters note
A <- solve(cov(uhat))
#udregn u_t'Au_t for at kunne tage summen
uhatAuhat <- apply(uhat,1,function(x) x %*% A %*% t(t(x)))
#likelihood fnctn
return(   +(n-1)/2*T*log(2*pi) - T/2*log(det(A)) + 1/2*sum(uhatAuhat)     )
} else
print("Set habitform = 1 or =0 ")
}
sol <-  optim(par = c(-1,-2,-2,   1, 0.1, 0.2, 1,   0.6,0.6,0.6,0.6), fn = loglik,
phat=phat, w=w, x=x, habitform=1, method="BFGS",
#lower = c(-100,-100,-100,0,0,0,0,0,0,0,0),
#upper=c(100,100,100,100,100,100,100,1,1,1,1),
control=list(maxit=5000))
print(sol)
sol_gamma <- c(sol$par[1:3],0)
sol_bstar <- sol$par[4:7]
sol_beta <-  sol$par[8:11]
sol_alpha <- exp(sol_gamma)/sum(exp(sol_gamma))
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
sol <-  optim(par = c(-1,-2,-2,   1, 0.1, 0.2, 1,   0.6,0.6,0.6,0.6), fn = loglik,
phat=phat, w=w, x=x, habitform=1, method="L-BFGS-B",
lower = c(-100,-100,-100,0,0,0,0,0,0,0,0),
upper=c(100,100,100,100,100,100,100,1,1,1,1),
control=list(maxit=5000))
print(sol)
sol_gamma <- c(sol$par[1:3],0)
sol_bstar <- sol$par[4:7]
sol_beta <-  sol$par[8:11]
sol_alpha <- exp(sol_gamma)/sum(exp(sol_gamma))
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
sol <-  optim(par = c(-1,-2,-2,   1, 0.1, 0.2, 1,   0.6,0.6,0.6,0.6), fn = loglik,
phat=phat, w=w, x=x, habitform=0, method="L-BFGS-B",
lower = c(-100,-100,-100,0,0,0,0,0,0,0,0),
upper=c(100,100,100,100,100,100,100,1,1,1,1),
control=list(maxit=5000))
print(sol)
sol_gamma <- c(sol$par[1:3],0)
sol_bstar <- sol$par[4:7]
sol_beta <-  sol$par[8:11]
sol_alpha <- exp(sol_gamma)/sum(exp(sol_gamma))
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
sol <-  optim(par = c(-1,-2,-2,   1, 0.1, 0.2, 1,   0.6,0.6,0.6,0.6), fn = loglik,
phat=phat, w=w, x=x, habitform=1, method="L-BFGS-B",
lower = c(-100,-100,-100,0,0,0,0,0,0,0,0),
upper=c(100,100,100,100,100,100,100,1,1,1,1),
control=list(maxit=5000))
print(sol)
sol_gamma <- c(sol$par[1:3],0)
sol_bstar <- sol$par[4:7]
sol_beta <-  sol$par[8:11]
sol_alpha <- exp(sol_gamma)/sum(exp(sol_gamma))
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
sol <-  optim(par = c(-1,-2,-2,   1, 0.1, 0.2, 1,   0.6,0.6,0.6,0.6), fn = loglik,
phat=phat, w=w, x=x, habitform=2, method="L-BFGS-B",
lower = c(-100,-100,-100,0,0,0,0,0,0,0,0),
upper=c(100,100,100,100,100,100,100,1,1,1,1),
control=list(maxit=5000))
options(scipen=999)
df<-read.csv("simpeldata8grup.csv",sep=';')
df<-read.csv("simpeldata8grup.csv",sep=';')
#make prices and shares
df     <- transform( df,
p1 = FOEDEVARER.OG.IKKE.ALKOHOLISKE.DRIKKEVARER/Faste.FOEDEVARER,
p2 = ALKOHOLISKE.DRIKKEVARER.OG.TOBAK/Faste.ALKOHOL,
p3 = BEKLAEDNING.OG.FODTOEJ/Faste.BEKLAEDNING,
p4 = BOLIGBENYTTELSE..ELEKTRICITET.OG.OPVARMNING/Faste.BOLIG.EL.OG.OPVARMNING,
p5 = MOEBLER/Faste.MOEBLER,
p6 = SUNDHED/Faste.SUNDHED,
p7 = TRANSPORT/Faste.TRANSPORT,
p8 = RESTAURANTER.OG.HOTELLER/Faste.RESTAURANTER.OG.HOTELLER
)
df     <- transform( df,
w1 = FOEDEVARER.OG.IKKE.ALKOHOLISKE.DRIKKEVARER/Sumloeb,
w2 = ALKOHOLISKE.DRIKKEVARER.OG.TOBAK/Sumloeb,
w3 = BEKLAEDNING.OG.FODTOEJ/Sumloeb,
w4 = BOLIGBENYTTELSE..ELEKTRICITET.OG.OPVARMNING/Sumloeb,
w5 = MOEBLER/Sumloeb,
w6 = SUNDHED/Sumloeb,
w7 = TRANSPORT/Sumloeb,
w8 = RESTAURANTER.OG.HOTELLER/Sumloeb
)
df     <- transform( df,
phat1=p1/Sumloeb,
phat2=p2/Sumloeb,
phat3=p3/Sumloeb,
phat4=p4/Sumloeb,
phat5=p5/Sumloeb,
phat6=p6/Sumloeb,
phat7=p7/Sumloeb,
phat8=p8/Sumloeb
)
View(df)
#make the relevant data
w = matrix(c(df$w1,df$w2,df$w3,df$w4,df$w5,df$w6,df$w7,df$w8),
nrow=26, ncol=8)
phat = matrix(c(df$phat1,df$phat2,df$phat3,df$phat4,df$phat5,df$phat6,df$phat7,df$phat8),
nrow=26, ncol=8)
x = matrix(c(df$Faste.FOEDEVARER,df$Faste.ALKOHOL,df$Faste.BEKLAEDNING,df$Faste.BOLIG.EL.OG.OPVARMNING,
df$Faste.MOEBLER, df$Faste.SUNDHED, df$Faste.TRANSPORT, df$Faste.TRANSPORT)
,nrow=26, ncol=8)
#scaling
x <- x/10000
phat <- phat*10000
x
Sumloeb
alpha_start=w[26,w]
alpha_start=w[26,]
gamma<-c(1,2,3,4,5,6,7,0)
sum(exp(gamma))
gamma<-c(1,3,3,4,5,6,7,0)
sum(exp(gamma))
alpha_start=w[26,]
2^2
c(1,2)^2
gammafn <- function(gamma_start,alpha_goal) {
return(  (alpha_goal - exp(gamma)/sum(exp(gamma)) )^2    )
}
optim(gamma_start=c(1,1,1,1,1,1,1), alpha_goal=w[26,1:7])
gammafn <- function(par,alpha_goal) {
return(  (alpha_goal - exp(gamma)/sum(exp(gamma)) )^2    )
}
optim(par=c(1,1,1,1,1,1,1), alpha_goal=w[26,1:7])
optim(par=c(1,1,1,1,1,1,1),fn=gammafn, alpha_goal=w[26,1:7])
gammafn <- function(par,alpha_goal) {
return(  sum((alpha_goal - exp(gamma)/sum(exp(gamma)) )^2)    )
}
optim(par=c(1,1,1,1,1,1,1),fn=gammafn, alpha_goal=w[26,1:7])
gammafn <- function(par,alpha_goal) {
return(  sum((alpha_goal - exp(par)/sum(exp(par)) )^2)    )
}
optim(par=c(1,1,1,1,1,1,1),fn=gammafn, alpha_goal=w[26,1:7])
gamma_start <- optim(par=c(1,1,1,1,1,1,1),fn=gammafn, alpha_goal=w[26,1:7])
print(gamma_start)
gammasol <- optim(par=c(1,1,1,1,1,1,1),fn=gammafn, alpha_goal=w[26,1:7])
print(gammasol)
gamma_start <- gammasol$par
alpha_start <- exp(gamma_start)/sum(exp(gamma_start))
print(w[26,1:7])
print(alpha_start)
gamma_start <- c(gammasol$par,0)
alpha_start <- exp(gamma_start)/sum(exp(gamma_start))
print(w[26,1:7])
print(alpha_start)
print(w[26,1:8])
print(alpha_start)
gammasol <- optim(par=c(1,1,1,1,1,1,1),fn=gammafn, alpha_goal=w[26,1:7])
print(gammasol)
gammasol <- optim(par=c(1,1,1,1,1,1,1),fn=gammafn, alpha_goal=w[26,1:7], method="BFGS")
#         control=list(maxit=5000))
print(gammasol)
gamma_start <- c(gammasol$par,0)
alpha_start <- exp(gamma_start)/sum(exp(gamma_start))
print(w[26,1:8])
print(alpha_start)
gammafn <- function(par,alpha_goal) {
return(  sum((alpha_goal - exp(par)/(1+sum(exp(par))) )^2)    )
}
gammasol <- optim(par=c(1,1,1,1,1,1,1),fn=gammafn, alpha_goal=w[26,1:7], method="BFGS")
#         control=list(maxit=5000))
print(gammasol)
gamma_start <- c(gammasol$par,0)
alpha_start <- exp(gamma_start)/sum(exp(gamma_start))
print(w[26,1:8])
print(alpha_start)
gammasol <- optim(par=c(1,1,1,1,1,1,1),fn=gammafn, alpha_goal=w[26,1:7], method="BFGS",
control=list(maxit=5000))
print(gammasol)
gamma_start <- c(gammasol$par,0)
alpha_start <- exp(gamma_start)/sum(exp(gamma_start))
print(w[26,1:8])
print(alpha_start)
rep(0.6,8)
x
bstar_start=c(0.90025,	0.1635,	0.2802,	2.1368,	0.30205,	0.101475,	0.7151,	0.18055)
beta_start = c(rep(0.5,8))
start = c(gamma_start[1:7],  bstar_start, beta_start)
lower = c(rep(-100,7),rep(0,8),rep(0,8))
upper =c(rep(100,7),rep(100,8),rep(1,8))
#start_bstar = c(rep(1,8))
bstar_start=c(0.90025,	0.1635,	0.2802,	2.1368,	0.30205,	0.101475,	0.7151,	0.18055)
beta_start = c(rep(0.5,8))
start = c(gamma_start[1:7],  bstar_start, beta_start)
bstar_start =c(0.90025,	0.1635,	0.2802,	2.1368,	0.30205,	0.101475,	0.7151,	0.18055)
beta_start = c(rep(0.5,8))
start = c(gamma_start[1:7],  bstar_start, beta_start)
print(start)
#start_bstar = c(rep(1,8))
x_min = min(x[,1:8])
x_min
apply(x,2,min)
bstar_start <- 0.25*apply(x, 2, min)
bstar_start
alpha_goal=w[26,]
gammafn <- function(par,alpha_goal) {
return(  sum((alpha_goal - exp(par)/(1+sum(exp(par))) )^2)    )
}
gammasol <- optim(par=c(1,1,1,1,1,1,1),fn=gammafn, alpha_goal=w[26,1:7], method="BFGS",
control=list(maxit=5000))
print(gammasol)
gamma_start <- c(gammasol$par,0)
alpha_start <- exp(gamma_start)/sum(exp(gamma_start))
print(w[26,1:8])
print(alpha_start)
bstar_start <- 0.25*apply(x, 2, min)
beta_start <- c(rep(0.5,8))
start = c(gamma_start[1:7],  bstar_start, beta_start)
print(start)
lower <- c(rep(-100,7),rep(0,8),rep(0,8))
upper <- c(rep(100,7),rep(100,8),rep(1,8))
sol <-  optim(par = start, fn = loglik,
phat=phat, w=w, x=x, habitform=0, method="L-BFGS-B",
lower = lower ,
upper= upper ,
control=list(maxit=5000))
print(sol)
sol_gamma <- c(sol$par[1:7],0)
sol_bstar <- sol$par[8:15]
sol_beta <-  c(sol$par[16:23])
sol_alpha <- exp(sol_gamma)/sum(exp(sol_gamma))
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
sol <-  optim(par = start, fn = loglik,
phat=phat, w=w, x=x, habitform=1, method="L-BFGS-B",
lower = lower ,
upper= upper ,
control=list(maxit=5000))
print(sol)
sol_gamma <- c(sol$par[1:7],0)
sol_bstar <- sol$par[8:15]
sol_beta <-  c(sol$par[16:23])
sol_alpha <- exp(sol_gamma)/sum(exp(sol_gamma))
#sol_b <- c(w[,1]*sol_beta[1] + sol_bstar[1], w[,2]*sol_beta[2] + sol_bstar[2], w[,3]*sol_beta[3] + sol_bstar[3], w[,4]*sol_beta[4] + sol_bstar[4]
#           ,w[,5]*sol_beta[5] + sol_bstar[5],w[,6]*sol_beta[6] + sol_bstar[6],w[,7]*sol_beta[7] + sol_bstar[7],w[,8]*sol_beta[8] + sol_bstar[8])
#print(sol_b)
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
options(digits=7)
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
1.8324834892344832
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
print(maxb)
print(alpha_start)
maxb = c(min(Faste.FOEDEVARER)/10000,
min(Faste.ALKOHOL)/10000,
min(Faste.BEKLAEDNING)/10000,
min(Faste.BOLIG.EL.OG.OPVARMNING)/10000,
min(Faste.MOEBLER)/10000,
min(Faste.SUNDHED)/10000,
min(Faste.TRANSPORT)/10000,
min(Faste.RESTAURANTER.OG.HOTELLER)/10000)
print(maxb)
print(alpha_start)
View(df)
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
bstar_start <- 0.5*apply(x, 2, min)
beta_start <- c(rep(0.25,8))
bstar_start <- 0.5*apply(x, 2, min)
beta_start <- c(rep(0.25,8))
start = c(gamma_start[1:7],  bstar_start, beta_start)
print(start)
lower <- c(rep(-100,7),rep(0,8),rep(0,8))
upper <- c(rep(100,7),rep(100,8),rep(1,8))
sol <-  optim(par = start, fn = loglik,
phat=phat, w=w, x=x, habitform=1, method="L-BFGS-B",
lower = lower ,
upper= upper ,
control=list(maxit=5000))
print(sol)
sol_gamma <- c(sol$par[1:7],0)
sol_bstar <- sol$par[8:15]
sol_beta <-  c(sol$par[16:23])
sol_alpha <- exp(sol_gamma)/sum(exp(sol_gamma))
#sol_b <- c(w[,1]*sol_beta[1] + sol_bstar[1], w[,2]*sol_beta[2] + sol_bstar[2], w[,3]*sol_beta[3] + sol_bstar[3], w[,4]*sol_beta[4] + sol_bstar[4]
#           ,w[,5]*sol_beta[5] + sol_bstar[5],w[,6]*sol_beta[6] + sol_bstar[6],w[,7]*sol_beta[7] + sol_bstar[7],w[,8]*sol_beta[8] + sol_bstar[8])
#print(sol_b)
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
#making other starting values. b_star should probably be less than minimum consumption
bstar_start <- 0.5*apply(x, 2, min)
beta_start <- c(rep(0.25,8))
start = c(gamma_start[1:7],  bstar_start, beta_start)
print(start)
beta_start <- c(rep(0.5,8))
sol <-  optim(par = start, fn = loglik,
phat=phat, w=w, x=x, habitform=1, method="L-BFGS-B",
lower = lower ,
upper= upper ,
control=list(maxit=5000))
print(sol)
sol_gamma <- c(sol$par[1:7],0)
sol_bstar <- sol$par[8:15]
sol_beta <-  c(sol$par[16:23])
sol_alpha <- exp(sol_gamma)/sum(exp(sol_gamma))
#sol_b <- c(w[,1]*sol_beta[1] + sol_bstar[1], w[,2]*sol_beta[2] + sol_bstar[2], w[,3]*sol_beta[3] + sol_bstar[3], w[,4]*sol_beta[4] + sol_bstar[4]
#           ,w[,5]*sol_beta[5] + sol_bstar[5],w[,6]*sol_beta[6] + sol_bstar[6],w[,7]*sol_beta[7] + sol_bstar[7],w[,8]*sol_beta[8] + sol_bstar[8])
#print(sol_b)
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
df
results <- matrix(c(sol_alpha,sol_bstar,sol_beta),ncol=3,byrow=TRUE)
colnames(results) <- c("Foedevarer","Alko","Beklaedning","Boligel","Moebler","Sundhed","Transport")
rownames(results) <- c("alpha","b_star","Beta")
results <- as.table(results)
results
results <- matrix(c(sol_alpha,sol_bstar,sol_beta),ncol=8,byrow=TRUE)
colnames(results) <- c("Foedevarer","Alko","Beklaedning","Boligel","Moebler","Sundhed","Transport")
rownames(results) <- c("alpha","b_star","Beta")
results <- as.table(results)
results
results <- matrix(c(sol_alpha,sol_bstar,sol_beta),ncol=8,byrow=TRUE)
colnames(results) <- c("Foedev","Alko","Beklaed","Boligel","Moebler","Sundhed","Transport", "RestogHotel")
rownames(results) <- c("alpha","b_star","Beta")
results <- as.table(results)
results
results
#making other starting values. b_star should probably be less than minimum consumption
bstar_start <- 0.7*apply(x, 2, min)
beta_start <- c(rep(0.2,8))
start = c(gamma_start[1:7],  bstar_start, beta_start)
print(start)
lower <- c(rep(-100,7),rep(0,8),rep(0,8))
upper <- c(rep(100,7),rep(100,8),rep(1,8))
sol <-  optim(par = start, fn = loglik,
phat=phat, w=w, x=x, habitform=1, method="L-BFGS-B",
lower = lower ,
upper= upper ,
control=list(maxit=5000))
print(sol)
sol_gamma <- c(sol$par[1:7],0)
sol_bstar <- sol$par[8:15]
sol_beta <-  c(sol$par[16:23])
sol_alpha <- exp(sol_gamma)/sum(exp(sol_gamma))
#sol_b <- c(w[,1]*sol_beta[1] + sol_bstar[1], w[,2]*sol_beta[2] + sol_bstar[2], w[,3]*sol_beta[3] + sol_bstar[3], w[,4]*sol_beta[4] + sol_bstar[4]
#           ,w[,5]*sol_beta[5] + sol_bstar[5],w[,6]*sol_beta[6] + sol_bstar[6],w[,7]*sol_beta[7] + sol_bstar[7],w[,8]*sol_beta[8] + sol_bstar[8])
#print(sol_b
results <- matrix(c(sol_alpha,sol_bstar,sol_beta),ncol=8,byrow=TRUE)
colnames(results) <- c("Foedev","Alko","Beklaed","Boligel","Moebler","Sundhed","Transport", "RestogHotel")
rownames(results) <- c("alpha","b_star","Beta")
results <- as.table(results)
results
alpha_goal=w[26,]
#Løser ligningssystem, så gamma'erne afspejler de ønskede alphaer.
#gamma_n er lig 0.
gammafn <- function(par,alpha_goal) {
return(  sum((alpha_goal - exp(par)/(1+sum(exp(par))) )^2)    )
}
gammasol <- optim(par=c(1,1,1,1,1,1,1),fn=gammafn, alpha_goal=w[26,1:7], method="BFGS",
control=list(maxit=5000))
print(gammasol)
gamma_start <- c(gammasol$par,0)
alpha_start <- exp(gamma_start)/sum(exp(gamma_start))
#tjekker at det passer.
print(w[26,1:8])
print(alpha_start)
#sætter startværdier for bstar: her 70 pct. af det mindste forbrug over årene af en given vare i fastepriser
bstar_start <- 0.25*apply(x, 2, min) # b skal fortolkes som 10.000 2015-kroner.
beta_start <- c(rep(0.5,8))  #beta sættes til 0.5
start = c(gamma_start[1:7],  bstar_start, beta_start)
print(start)
# Sætter upper og lower bounds (ellers kan den godt stikke af)
# gammaerne er (så godt som) frie, b'erne skal være >0 og beta'erne mellem 0 og 1.
# bemærk at b skal fortolkes som
lower = c(rep(-100,7),rep(0,8),rep(0,8))
upper =c(rep(100,7),rep(12,8),rep(1,8))
sol <-  optim(par = start, fn = loglik,
phat=phat, w=w, x=x, habitform=1, method="L-BFGS-B",
lower = lower ,
upper= upper ,
control=list(maxit=5000))
print(sol)
sol_gamma <- c(sol$par[1:7],0)
sol_bstar <- sol$par[8:15]
sol_beta <-  c(sol$par[16:23])
sol_alpha <- exp(sol_gamma)/sum(exp(sol_gamma))
#print(sol_b)
print(sol_alpha)
print(sol_bstar)
print(sol_beta)
