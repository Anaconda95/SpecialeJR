GAMS 30.1.0  re01a340 Released Jan 10, 2020 DEX-DEG x86 64bit/Mac OS X - 03/26/20 17:50:03 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   2  ********************************************************************************
   3  * Model for assessing the distributional impacts of different revenue recycling*
   4  *  schemes when accounting for pollution-intensive subsistence consumption     *
   5  *  with Stone-Geary utility functions.                                         *                 *
   6  *                                                                              *
   7  * David Klenert, 2014-2015,  Potsdam Institute for Climate Impact Research     *
   8  ********************************************************************************
   9   
  10  * Pure optimal taxation version
  11   
  12  SETS
  13  i              income quintiles                           / 1*5/
  14  g              type of good                               /C, D/;
  15   
  16  Alias(g,h);
  17   
  18  Variables
  19  * firm
  20  T(g)           labor time in production of good g
  21  Z(g)           pollution in production of good g
  22  Ztotal         total pollution
  23  wage           rental price labor
  24   
  25  F(g)           production of good g
  26   
  27  pr(g)          price of good g
  28   
  29  T_total(i)     total time endowment of agents
  30  P              total pollution
  31   
  32  * households
  33  a              help param
  34  X(i,g)         amount of good g consumed by hh i
  35  E(i)           generic consumption good
  36  lei(i)         leisure of hh i
  37  inc            gross income
  38   
  39  * government
  40  !!gC Not used
  41  !!gD Not used
  42  U(i)           Utility (with environmental component)
  43  U_NE(i)           Non-environmental utility
  44  L              Lump-sum transfers
  45  Rev            Tax revenue government
  46  W              Welfare
  47  W_NE           Non-environmental welfare
  48  Gov(g)         Government consumption of good g
  49  tau(g)          tax on polluting output
  50  tau_P          pollution tax
  51  tau_w(i)       non-linear income tax
  52  tau_w_flat     flat income tax rebate
  53  * tau_w_preex(i) temporary as a variable    !! comment this when not calculating the optimal pre-existing income tax
  54  * gov_share      government share of output   !! comment this when not calculating the optimal pre-existing government consumption share
  55  GovRev_pol     Government revenue from pollution taxes
  56  GovRev_LS      Government revenue from lump-sum taxes
  57  GovRev_inc     Government revenue from income taxes
  58   
  59   
  60  * post processing
  61  Xtotal(g)      Total consumption of good g
  62  GDP            Sum of all goods multiplied by the prices
  63  CbyD           Ratio clean to polluting consumption
  64  ConsPor(i,g)   Consumption share of good g of household i
  65  ConsPor_total(i) Total consumption share
  66  UtilPor(i)     Utility share
  67  UtilPor_NE     Utility share non-environmental
  68  gini_C         Gini coefficient consumption
  69  gini_u         Gini coefficient utility
  70  Gini_U_NE      Gini coefficient non-environmental utility
  71  rel_cons       Relative share of consumption of hh i
  72  rel_burden     Relative income tax burden of hh i
  73  suits_help     helping variable when calculating suits index
  74  suits          Suits index of income tax system
  75  inc_tax_total_burden total tax burden for calculating suits index
  76   
  77  Z_dum              Dummy variable for market solution
  78  ;
  79   
  80  Parameters
  81  * firm
  82  epsilon(g)     labor intensity in production of good g
  83  s              elasticity of substitution btw. labor and pollution
  84  r              CES Parameter
  85  !! A_(g)       TFP in production
  86  abate              parameter for labor intensity of pollution in production
  87  !!omega          factor in production before pollution
  88   
  89  * households
  90  alpha(g)       share of consumption of good g in utility
  91  gamma          leisure exponent in utility
  92  X0(g)          subsistence level consumption of of good g
  93   
  94  * government
  95  xi             environmental preference parameter
  96  min            minimum value of variables
  97  theta          exponent of damage function
  98  p_helper       scan parameter for communication with R
  99  gov_spdg       government spending requirement
 100   
 101   
 102  * model operation
 103  SWITCH_Diff    activate differentiated income tax cuts
 104  SWITCH_Unif    activate uniform income tax cuts
 105  SWITCH_ULS     activate uniform lump-sum transfers
 106  SWITCH_UnifULS activate uniform income tax cuts plus ULS
 107  SWITCH_Bench
 108  SWITCH_opttax  activate social planner solution and the determination of optimal carbon taxes
 109  SWITCH_optInctax calculate optimal preexisting income tax
 110  SWITCH_optGovBud calculate optimal government budget for a given pre-existing income tax system
 111  SWITCH_DetL0   determine the L0 for the actual system
 112  SWITCH_opttaxsys determine optimal preexisting tax system
 113  SWITCH_OUT     activate output tax instead of pollution tax
 114  ;
 115   
 116  ********************************************************************************
 117  *****                     Set model parameters                             *****
 118  ********************************************************************************
 119   
 120  *New Benchmark with priv cost
 121  !!A_C     = 1;     A_D         = 1;    !!epsilon     = 0.92;
 122  gamma   = 0.2;   gov_spdg    = 5;
 123  min         = 1e-9;     xi      = 0.1;   theta      = 1.0;    !!xi      = 0.05; for 2nd best
 124  s         = 0.5;     abate           = 1;
 125  r         = 1-1/s;   !!omega       = 1;
 126   
 127  *Benchmark standard model
 128  *gamma     = 0.95;    epsilon     = 0.5;      A_C     = 1;     A_D         = 1;
 129  *alpha     = 0.7;     beta        = 0.2;      delta   = 0.2;   gov_spdg    = 8.696;
 130  *D0        = 0.5;     min         = 1e-9;     xi      = 0.02;  damexp      = 1.1;
 131  *s         = 0.9;     x           = 0.08;
 132   
 133  *Benchmark with priv cost
 134  *gamma     = 0.95;    epsilon     = 0.5;      A_C     = 1;     A_D         = 1;
 135  *alpha     = 0.6;     beta        = 0.25;      delta   = 0.2;  gov_spdg    = 1;!!8.696;
 136  *D0        = 0.25;     min         = 1e-9;     xi      = 0.2;  damexp      = 1.1;
 137  *s         = 0.9;     x           = 0.08;
 138  *r         = 1-1/s;
 139   
 140  ********************************************************************************
 141  *****                      Set model switches                              *****
 142  ********************************************************************************
 143  Switch_Bench     =       0; !! after environmental tax reform
 144  SWITCH_DetL0     =       1; !! before environmental tax reform
 145   
 146  ********************************************************************************
 147  *****                     Set model parameters                             *****
 148  ********************************************************************************
 149   
 150  p_helper=0.1;
 151   
 152  Parameter epsilon(g) /C 0.995, D 0.92/;
 153   
 154  Parameter alpha(g)   /C 0.7, D 0.2/;
 155   
 156  Parameter X0(g)      /C 0, D 0.5/;
 157   
 158  Parameter phi(i)          productivity of individual households
 159                  /1 0.03,
 160                   2 0.0825,
 161                   3 0.141,
 162                   4 0.229,
 163                   5 0.511/;
 164  Parameter tau_w_preex(i);
 165  tau_w_preex(i) = 0;
 166   
 167  ********************************************************************************
 168  *****                 Set limits and starting values                       *****
 169  ********************************************************************************
 170  * Limits
 171  L.lo     =       min;    T.lo(g)   =       min;    Z.lo(g)   =       min;
 172  F.lo(g)   =       min;   pr.lo(g)  =       min;    wage.lo  =       min;
 173  lei.lo(i)=       min;   lei.up(i)=       24-1e-9;
 174  X.lo(i,g)  =    X0(g) + min;     tau_w.up(i)=     0;
 175   
 176  *Starting values
 177  X.l(i,g)=0.4;
 178  *tau_w.l(i)=-0.4;
 179   
 180  Equations
 181   
 182  FirmProd(g),totalT,FirmFOC1(g),FirmFOC2(g),Copeland(g),HHFOC1(i,g,h),HHFOC2(i,g),HHFOC3(i),numeraire,
 183  GenEq(g),Utility,Welfare,Tax,Inc_constraint,Dummy,Utility_NE,Welfare_NE
 184  ;
 185  **********************************Firms*****************************************
 186  FirmProd(g)..
 187                           F(g)                  =e=    (epsilon(g)*T(g)**r + (1-epsilon(g))*Z(g)**r)**(1/r);      !!A_D*T_D**epsilon*Z_D**(1-epsilon);
 188  FirmFOC1(g)..
 189                           wage                  =e=     epsilon(g)    *T(g)**(r-1)*F(g)**(1-r)*pr(g);
 190  FirmFOC2(g)..
 191                           tau_P                 =e=     (1-epsilon(g))*Z(g)**(r-1)*F(g)**(1-r)*pr(g);
 192  totalT..
 193                           0                     =e=     sum(g,T(g)) -sum(i,phi(i)*(T_total(i)-lei(i)));
 194  Copeland(g)..
 195                           Z(g)                  =l=     abate*T(g);
 196   
 197  ********************************Households**************************************
 198  HHFOC1(i,g)..
****            $148
**** 148  Dimension different - The symbol is referenced with more/less
****         indices as declared
 199                           pr(g)*(X(i,g)-X0(g))  =e= alpha(g)/alpha(g+1)*(X(i,g+1)-X0(g+1)*pr(g+1);
****                                                                                                  $8
****   8  ')' expected
 200  HHFOC2(i,g)..
 201                           pr(g)*(X(i,g)-X0(g))  =e= alpha(g)/gamma*lei(i)*( (1-tau_w(i))*phi(i)*wage );
 202  HHFOC3(i)..
 203                           sum(g,X(i,g)*pr(g))   =e= (1-tau_w(i))*phi(i)*wage*(T_total(i)-lei(i)) + L;
 204   
 205  *****************************Market clearing***********************************
 206  numeraire..
 207                           wage      =e=     1;
 208  GenEq(g)..
 209                           F(g)      =e=     sum(i,X(i,g))+ gov_spdg/(pr(g)*card(g));!!*sum(i,C(i))/(sum(i,C(i))+sum(i,D(i)));!! F_C; !!
 210   
 211  ********************************Government**************************************
 212  Tax..
 213                           Gov_spdg  =e=     tau_p*sum(g,Z(g)) + wage*sum(i,tau_w(i)*phi(i)*(T_total(i)-lei(i))) - 5*L; !!
 214  Inc_constraint(i)$(ord(i) lt 5)..
 215                           U(i+1)    =g=     prod(g,(X(i,g)-X0(g))**alpha(g))*( T_total(i)-(sum(g,X(i,g)*pr(g)) -L )/( (1-tau_w(i))*phi(i+1)*wage ) )**gamma-xi*sum(g,Z(g))**theta;   !! Gregor approach
 216  Utility(i)..
 217                           U(i)      =e=     prod(g,(X(i,g)-X0(g))**alpha(g))*lei(i)**gamma - xi*(sum(g,Z(g))**theta);
 218  Utility_NE(i)..
 219                           U_NE(i)   =e=     prod(g,(X(i,g)-X0(g))**alpha(g))*lei(i)**gamma;
 220  Welfare..
 221                           W         =e=     sum(i, U(i));      !!U('1')*0.92+U('2')*0.94+U('3')*0.96+U('4')*0.98+U('5')-xi*(Z_C+Z_D)**damexp;!!
 222  Welfare_NE..
 223                           W_NE      =e=     sum(i, U_NE(i));
 224  Dummy..
 225                           Z_dum     =e=     0;
 226   
 227  model SG_MM /totalT,FirmProd,FirmFOC1,FirmFOC2,Copeland, HHFOC1,
 228  HHFOC2,HHFOC3,GenEq,numeraire,Tax,Inc_constraint,Utility,Utility_NE,Welfare_NE,Welfare,Dummy/;
 229  model SG_SP /totalT,FirmProd,FirmFOC1,FirmFOC2,Copeland, HHFOC1,
 230  HHFOC2,HHFOC3,GenEq,numeraire,Tax,Inc_constraint,Utility,Utility_NE,Welfare_NE,Welfare/;
 231  option nlp=conopt;
 232   
 233  ********************************************************************************
 234  *****                    Set additional variables                          *****
 235  ********************************************************************************
 236   
 237  gov.fx(g)  = 1;
 238  T_total.fx(i)   =        24;         !! time endowment to each worker
 239  tau_P.fx  =        0;!!0.043;        !! fixed pre-existing carbon price (extraction cost or such)
 240   
 241   
 242   
 243  if (SWITCH_DetL0 eq 1,
 244   
 245           Execute_loadpoint 'sg-results_4_diff_and_L_opt_LOAD3.gdx';
 246   
 247   
 248           tau_P.lo       =     -10;
 249           tau_P.up       =     10;
 250           L.lo           =    -1e2;
 251           L.up           =     1e2;
 252           tau_w.lo(i)    =     -20;
 253           tau_w.up(i)    =     20;
 254   
 255  !!         tau_D.fx       =      0;
 256           tau_w_flat.fx=0;
 257   
 258           Solve SG_SP      maximizing w_NE using nlp;
****                                                     $257
**** 257  Solve statement not checked because of previous errors
 259           Solve SG_SP      maximizing w_NE using nlp;
****                                                     $257
**** 257  Solve statement not checked because of previous errors
 260           Solve SG_SP      maximizing w_NE using nlp;
****                                                     $257
**** 257  Solve statement not checked because of previous errors
 261   
 262   
 263  !!$include "SG_calculate_ginis_etc.inc"
 264           execute_unload 'sg-initial.gdx';
 265  )
 266   
 267  ************   Solution for both diff. and lump-sum  ********************
 268  if (SWITCH_Bench eq 1,
 269           Execute_loadpoint 'sg-results_4_diff_and_L_opt_LOAD3.gdx';
 270   
 271           xi             =     0.1;!!p_helper;
 272   
 273           L.lo           =     -1e1;
 274           L.up           =      1e1;
 275           tau_w.lo(i)    =     -20;
 276           tau_w.up(i)    =      20;
 277           tau_P.lo       =     -10;
 278           tau_P.up       =      10;
 279  !!         tau_D.fx       =      0;
 280           tau_w_flat.fx=0;
 281   
 282           Solve SG_SP      maximizing w using nlp;
****                                                  $257
**** 257  Solve statement not checked because of previous errors
 283           Solve SG_SP      maximizing w using nlp;
****                                                  $257
**** 257  Solve statement not checked because of previous errors
 284           Solve SG_SP      maximizing w using nlp;
****                                                  $257
**** 257  Solve statement not checked because of previous errors
 285   
 286  !!$include "SG_calculate_ginis_etc.inc"
 287           execute_unload 'sg-results_4_diff_and_L_opt.gdx';
 288  );
 289   
 290   
 291   
      FILE out / 'output.put'/ ;
      !! file for differentiated labor tax cut
      out.pw = 4000;
      PUT out;
      PUT 'F_C',',','F_D',',','tau_p',',','L',',','gamma',',','epsilon',',','alpha',',','delta',',','xi',',','damexp',',','D0',',','T',',','T_C',',','T_D',',','Z_C',',','Z_D',',','Z_total',',','pr_C',',','pr_D',',','wage',',','C1',',','C2',',','C3',',','C
      4',',','C5',',','D1',',','D2',',','D3',',','D4',',','D5',',','C_total',',','D_total',',','ConsPor_C1',',','ConsPor_C2',',','ConsPor_C3',',','ConsPor_C4',',','ConsPor_C5',',','ConsPor_D1',',','ConsPor_D2',',','ConsPor_D3',',','ConsPor_D4',',','ConsPo
      r_D5',',','ConsPor_total1',',','ConsPor_total2',',','ConsPor_total3'
      ,',','ConsPor_total4',',','ConsPor_total5',',','UtilPor1',',','UtilPor2',',','UtilPor3',',','UtilPor4',',','UtilPor5',',','UtilPor1_NE',',','UtilPor2_NE',',','UtilPor3_NE',',','UtilPor4_NE',',','UtilPor5_NE',',','Gini_C',',','Gini_U',',','Gini_U_NE'
      ,',','Welfare_E',',','Welfare_NE',',',
      'lei1',',','lei2',',','lei3',',','lei4',',','lei5',',','tau_w_1',',','tau_w_2',',','tau_w_3',',','tau_w_4',',','tau_w_5',',','U1',',','U2',',','U3',',','U4',',','U5',',','U1_NE',',','U2_NE',',','U3_NE',',','U4_NE',',','U5_NE';
      put /;
      PUT F_C.l:0:6,',',F_D.l:0:6,',',tau_p.l:0:12,',',L.l:0:6
      ,',',gamma:0:4,',',epsilon:0:4,',',alpha:0:4,',',delta:0:4,',',xi:0:4,',',damexp:0:4,',',D0:0:4,',',T.l('1'):0:4,',',T_C.l:0:4,',',T_D.l:0:4,',',Z_C.l:0:4,',',Z_D.l:0:4,',',Ztotal.l:0:4
      ,',',pr_C.l:0:4,',',pr_D.l:0:4,',',wage.l:0:4,',',C.l('1'):0:4,',',C.l('2'):0:4,',',C.l('3'):0:4,',',C.l('4'):0:4,',',C.l('5'):0:4
      ,',',D.l('1'):0:4,',',D.l('2'):0:4,',',D.l('3'):0:4,',',D.l('4'):0:4,',',D.l('5'):0:4,',',C_total.l:0:4,',',D_total.l:0:4,',',ConsPor_C.l('1'):0:6,',',ConsPor_C.l('2'):0:6,',',ConsPor_C.l('3'):0:6,',',
      ConsPor_C.l('4'):0:6,',',ConsPor_C.l('5'):0:6,',',ConsPor_D.l('1'):0:6,',',ConsPor_D.l('2'):0:6,',',ConsPor_D.l('3'):0:6,',',ConsPor_D.l('4'):0:6,',',ConsPor_D.l('5'):0:6,',',ConsPor_total.l('1'):0:6,',',ConsPor_total.l('2'):0:6,',',ConsPor_total.l(
      '3'):0:6,',',
      ConsPor_total.l('4'):0:6,',',ConsPor_total.l('5'):0:6,',',UtilPor.l('1'):0:6,',',UtilPor.l('2'):0:6,',',UtilPor.l('3'):0:6,',',UtilPor.l('4'):0:6,',',UtilPor.l('5'):0:6
      ,',',UtilPor_NE.l('1'):0:6,',',UtilPor_NE.l('2'):0:6,',',UtilPor_NE.l('3'):0:6,',',UtilPor_NE.l('4'):0:6,',',UtilPor_NE.l('5'):0:6
      ,',',gini_c.l:0:6,',',gini_u.l:0:6,',',gini_u_NE.l:0:6,',',W.l:0:6,',',W_NE.l:0:6,',',lei.l('1'):0:4,',',lei.l('2'):0:4,',',lei.l('3'):0:4,',',lei.l('4'):0:4,',',lei.l('5'):0:4,',',tau_w.l('1'):0:4
      ,',',tau_w.l('2'):0:4,',',tau_w.l('3'):0:4,',',tau_w.l('4'):0:4,',',tau_w.l('5'):0:4,',',U.l('1'):0:4,',',U.l('2'):0:4,',',U.l('3'):0:4,',',U.l('4'):0:4,',',U.l('5'):0:4
      ,',',U_NE.l('1'):0:4,',',U_NE.l('2'):0:4,',',U_NE.l('3'):0:4,',',U_NE.l('4'):0:4,',',U_NE.l('5'):0:4;
      PUTCLOSE out;

**** 8 ERROR(S)   0 WARNING(S)


COMPILATION TIME     =        0.014 SECONDS      3 MB  30.1.0 re01a340 DEX-DEG


USER: GAMS Demo license for Rasmus Kaslund           G200206|0002CO-GEN
      University of Copenhagen, Denmark                        DL001455


**** FILE SUMMARY

Input      /Users/rasmuskaslund/OneDrive - Københavns Universitet/Seminar Environment Economics/Model med 47 grupper/Klenertmodel_47goods_16marts.gms
Output     /Users/rasmuskaslund/OneDrive - Københavns Universitet/Seminar Environment Economics/Model med 47 grupper/Klenertmodel_47goods_16marts.lst

**** USER ERROR(S) ENCOUNTERED
